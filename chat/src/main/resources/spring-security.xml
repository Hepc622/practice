<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security.xsd">
  	<!--  Spring-Security 的配置 -->  
    <!-- 注意use-expressions=true.表示开启表达式,否则表达式将不可用.  
    see:http://www.family168.com/tutorial/springsecurity3/html/el-access.html  
     -->  
    
    <http auto-config="true" use-expressions="true"> 
    	
        <!-- 登录页面不需要控制权限 -->
        <intercept-url pattern="/res/**" access="permitAll"/>
        <intercept-url pattern="/pages/login.html" access="permitAll"/>
        <!-- 访问其他所有页面都需要有ADMIN权限 -->
        <intercept-url pattern="/main/admin" access="hasRole('ROLE_ADMIN')"/>  
        
        <!-- 访问其他所有页面都需要有USER权限 -->
        <intercept-url pattern="/**" access="hasRole('ROLE_USER')"/>
        
        <!-- 配置登录页面地址login-page、登录失败后的跳转地址authentication-failure-url -->
        <form-login login-page="/pages/login.html" authentication-failure-url="/pages/login.html?error=true" default-target-url="/index.html" />
        
        <!-- 如果没有权限将会跳转到这个页面 --> 
       	<access-denied-handler error-page="/pages/accessDenied.html"/>
       	
        <!-- 登出功能 -->
        <logout />
        
        <csrf disabled="true"/>
       
    </http>  
      
    <!-- 指定一个自定义的authentication-manager :customUserDetailsService -->  
    <authentication-manager alias="authenticationManager" >
            <authentication-provider user-service-ref="ourUserDetailsService">  
                    <password-encoder ref="passwordEncoder"/>  
            </authentication-provider>  
    </authentication-manager>  
      
    <!-- 对密码进行MD5编码 -->  
    <beans:bean class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" id="passwordEncoder"/>  
  
    <!--   
	        通过 customUserDetailsService,Spring会自动的用户的访问级别.  
	        也可以理解成:以后我们和数据库操作就是通过customUserDetailsService来进行关联.  
     -->  
    <!-- <beans:bean id="ourUserDetailsService" class="com.practice.chat.security.OurUserDetailsService"/> -->  
</beans:beans>